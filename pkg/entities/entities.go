package entities

import (
	"net/url"
	"strings"
)

type PermissionRequest struct {
	Header           map[string]string `json:"header" validate:"required"`
	Method           string            `json:"method" validate:"required"`
	RemoteAddr       string            `json:"remoteAddr" validate:"required"`
	URL              *url.URL          `json:"url" validate:"required"`
	RawBody          []byte            `json:"rawBody"`
	headerAttbsLower bool
}

func (c *PermissionRequest) GetHeader(name string) string {
	if !c.headerAttbsLower {
		for k, v := range c.Header {
			delete(c.Header, k)
			c.Header[strings.ToLower(k)] = v
		}
		c.headerAttbsLower = true
	}

	return c.Header[strings.ToLower(name)]
}

type TraceID struct {
	W3C string `json:"w3c"`
}

// {"source":"upstream","workspace_name":"default","upstream_uri":"/anything","service":{"retries":5,"port":443,"write_timeout":60000,"tls_verify":true,"updated_at":1724164814,"tls_verify_depth":1,"connect_timeout":60000,"ws_id":"b7acc602-525c-4963-b3a8-4e6a0f1aee49","protocol":"https","host":"httpbin.org","read_timeout":60000,"created_at":1724164814,"id":"2c4a2aaa-279c-4d64-af6e-4324481265c1","name":"httpbin","tags":["httpbin"],"ca_certificates":["6313f8e2-0d69-4116-a814-3be69d2db26c"],"enabled":true},"tries":[{"port":443,"balancer_start":1724168080616,"balancer_start_ns":1.724168080617001e+18,"balancer_latency_ns":89344,"ip":"107.23.72.23","balancer_latency":1}],"workspace":"b7acc602-525c-4963-b3a8-4e6a0f1aee49","latencies":{"receive":1,"proxy":1172,"request":1240,"kong":65},"client_ip":"169.254.170.1","started_at":1724168080552,"upstream_status":"200","response":{"size":1082,"status":200,"headers":{"x-kong-upstream-latency":"1172","x-kong-upstream-status":"200","access-control-allow-origin":"*","access-control-allow-credentials":"true","content-length":"680","date":"Tue, 20 Aug 2024 15:34:41 GMT","content-type":"application/json","x-kong-request-id":"7a22a5734ed4220834afd017d1b4f731","via":"kong/3.7.1.2-enterprise-edition","connection":"close","x-kong-proxy-latency":"65","server":"gunicorn/19.9.0"}},"route":{"request_buffering":true,"response_buffering":true,"service":{"id":"2c4a2aaa-279c-4d64-af6e-4324481265c1"},"https_redirect_status_code":426,"preserve_host":false,"ws_id":"b7acc602-525c-4963-b3a8-4e6a0f1aee49","updated_at":1724164814,"regex_priority":0,"path_handling":"v0","created_at":1724164814,"protocols":["http"],"id":"331e8b0e-7ef8-4309-8fa0-aea5c09b1492","name":"anything","tags":["httpbin"],"methods":["POST","GET"],"strip_path":false,"paths":["/anything","/path/to/anything"]},"request":{"size":175,"method":"POST","id":"7a22a5734ed4220834afd017d1b4f731","url":"http://169.254.170.7:8000/anything","headers":{"user-agent":"vscode-restclient","traceparent":"00-2f44982bb0fe36d93bd119159e09f70c-e98d5525c822e63f-01","connection":"close","content-length":"20","host":"169.254.170.7:8000","accept-encoding":"gzip, deflate"},"uri":"/anything","querystring":{}},"trace_id":{"w3c":"2f44982bb0fe36d93bd119159e09f70c"}}
// https://mholt.github.io/json-to-go/
type AutoGenerated struct {
	WorkspaceName string  `json:"workspace_name"`
	TraceID       TraceID `json:"trace_id"`
}
